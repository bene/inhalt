generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PreviewBuild {
  id         String             @id @default(uuid()) @db.Uuid
  commitHash String
  components Json?
  createdAt  DateTime           @default(now())
  finishedAt DateTime?
  status     PreviewBuildStatus @default(Running)
  project    Project            @relation(fields: [projectId], references: [id])
  projectId  String             @db.Uuid
}

model PreviewBuildEnvironmentVariable {
  id        String  @id @default(uuid()) @db.Uuid
  name      String
  value     String
  project   Project @relation(fields: [projectId], references: [id])
  projectId String  @db.Uuid

  @@unique([name, projectId])
}

enum PreviewBuildStatus {
  Running
  Failed
  Successful
}

model Page {
  id        String    @id @default(uuid()) @db.Uuid
  slug      String    @unique
  sections  Section[]
  project   Project   @relation(fields: [projectId], references: [id])
  projectId String    @db.Uuid
}

model Section {
  id            String @id @default(uuid()) @db.Uuid
  page          Page   @relation(fields: [pageId], references: [id])
  pageId        String @db.Uuid
  componentName String
  props         Json?
  order         Int
}

model Project {
  id                               String                            @id @default(uuid()) @db.Uuid
  name                             String                            @unique
  gitRepo                          GitRepo?
  pages                            Page[]
  previewBuilds                    PreviewBuild[]
  previewBuildEnvironmentVariables PreviewBuildEnvironmentVariable[]
}

model GitRepo {
  id          String
  name        String
  gitProvider GitProvider
  project     Project     @relation(fields: [projectId], references: [id])
  projectId   String      @id @db.Uuid

  @@index([id])
}

enum GitProvider {
  GitHub
}
